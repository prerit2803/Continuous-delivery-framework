- name: Create an AWS server for Kubernetes slaves
  ec2:
    key_name: kubernetes-key
    group: kubernetes-sec-grp
    instance_type: t2.micro
    image: ami-965e6bf3
    wait: yes
    count: 2
    region: us-east-2
    state: present
  register: aws

- debug:
    msg: 
    - Created instance "{{ aws.instances[0].id }}", public-ip "{{ aws.instances[0].public_ip }}", and private-ip "{{ aws.instances[0].private_ip }}"
    - Created instance "{{ aws.instances[1].id }}", public-ip "{{ aws.instances[1].public_ip }}", and private-ip "{{ aws.instances[1].private_ip }}"
- name: Wait for EC2 instance to become running and finish Status Checks
  wait_for:
    timeout: 180

# instance 0
- name: Get public key of EC2 instance 0
  shell: aws ec2 get-console-output \
          --region us-east-2 \
          --instance-id "{{aws.instances[0].id}}" \
          --output text|sed -n 's/^.*\(ecdsa-sha2-nistp256 \)\(.*\)/\2/p' | awk '{print $1}'
  register: key_results
  retries: 100
  until: key_results.stdout != ''

- name: Register public key to known_hosts
  lineinfile:
    name: "{{ ansible_env.HOME }}/.ssh/known_hosts"
    create: yes
    line: "{{ aws.instances[0].public_ip }} ecdsa-sha2-nistp256 {{key_results.stdout}}"
    insertafter: EOF
    state: present

- name: Update inventory for slaves
  lineinfile:
    path: ./inventory
    insertafter: 'slaves'
    line: "{{aws.instances[0].public_ip}} ansible_ssh_user=ubuntu ansible_ssh_private_key_file=~/kubernetes-key.pem"
    state: present

- name: Update inventory for nodes
  lineinfile:
    path: ./inventory
    insertafter: 'nodes'
    line: "{{aws.instances[0].public_ip}} ansible_ssh_user=ubuntu ansible_ssh_private_key_file=~/kubernetes-key.pem"
    state: present

# instance 1
- name: Get public key of EC2 instance 1
  shell: aws ec2 get-console-output \
          --region us-east-2 \
          --instance-id "{{aws.instances[1].id}}" \
          --output text|sed -n 's/^.*\(ecdsa-sha2-nistp256 \)\(.*\)/\2/p' | awk '{print $1}'
  register: key_results
  retries: 100
  until: key_results.stdout != ''

- name: Register public key to known_hosts
  lineinfile:
    name: "{{ ansible_env.HOME }}/.ssh/known_hosts"
    create: yes
    line: "{{ aws.instances[1].public_ip }} ecdsa-sha2-nistp256 {{key_results.stdout}}"
    insertafter: EOF
    state: present

- name: Update inventory for slaves
  lineinfile:
    path: ./inventory
    insertafter: 'slaves'
    line: "{{aws.instances[1].public_ip}} ansible_ssh_user=ubuntu ansible_ssh_private_key_file=~/kubernetes-key.pem"
    state: present

- name: Update inventory for nodes
  lineinfile:
    path: ./inventory
    insertafter: 'nodes'
    line: "{{aws.instances[1].public_ip}} ansible_ssh_user=ubuntu ansible_ssh_private_key_file=~/kubernetes-key.pem"
    state: present

- meta: refresh_inventory
