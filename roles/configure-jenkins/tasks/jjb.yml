- name: Cloning Project Repo at $JENKINS_HOME
  git:
    repo: "https://{{ env_vars.GIT_USER }}:{{env_vars.GIT_PASSWORD | urlencode }}@github.ncsu.edu/asaxena3/CSC519-Project.git"
    version: Milestone1
    dest: /var/lib/jenkins/project_repo
    force: yes
  become: yes

- name: Install python-pip
  become: yes
  apt:
    name: python-pip
    state: latest

- name: Install Jenkins Job Builder
  become: yes
  pip:
    name: jenkins-job-builder

- name: Disable Jenkins' initial authorization wizard
  become: yes
  replace:
    path: /etc/default/jenkins
    regexp: -Djava.awt.headless=true
    replace: -Djava.awt.headless=true -Djenkins.install.runSetupWizard=false

- name: Create init.groovy.d folder in $JENKINS_HOME
  become: yes
  file:
    path: /var/lib/jenkins/init.groovy.d/
    state: directory

- name: Copy grovy scripts to $JENKINS_HOME
  become: yes
  command: cp -r /var/lib/jenkins/project_repo/jenkins_files/init.groovy.d/{{ item }} /var/lib/jenkins/init.groovy.d/
  with_items:
    - init.groovy
    - makeCred.groovy
    - envSet.groovy
    - remove.groovy

- name: Set Git User name in Groovy script
  vars:
    gituser: "{{ env_vars.GIT_USER }}"
  replace:
    path: /var/lib/jenkins/init.groovy.d/makeCred.groovy
    regexp: 'githubuser'
    replace: "{{gituser}}"
  become: yes

- name: Set Git Password in Groovy script
  vars:
    gitpass: "{{ env_vars.GIT_PASSWORD }}"
  replace:
    path: /var/lib/jenkins/init.groovy.d/makeCred.groovy
    regexp: 'githubpwd'
    replace: "{{gitpass}}"
  become: yes

- name: Set MySQL Password in Groovy script
  vars:
    mysqlpass: "{{ env_vars.mysql_password }}"
  replace:
    path: /var/lib/jenkins/init.groovy.d/envSet.groovy
    regexp: 'ENTER_HERE_MYSQL_PASSWORD'
    replace: "{{mysqlpass}}"
  become: yes

- name: Set AWS Access Key in Groovy script
  vars:
    accessKey: "{{ env_vars.ACCESS_KEY }}"
  replace:
    path: /var/lib/jenkins/init.groovy.d/envSet.groovy
    regexp: 'ENTER_HERE_AWS_ACCESS_KEY_ID'
    replace: "{{accessKey}}"
  become: yes

- name: Set AWS Secret Key in Groovy script
  vars:
    secretKey: "{{ env_vars.SECRET_KEY }}"
  replace:
    path: /var/lib/jenkins/init.groovy.d/envSet.groovy
    regexp: 'ENTER_HERE_AWS_SECRET_ACCESS_KEY'
    replace: "{{secretKey}}"
  become: yes

- name: Set GitHub User in Groovy script
  vars:
    gituser: "{{ env_vars.GIT_USER }}"
  replace:
    path: /var/lib/jenkins/init.groovy.d/envSet.groovy
    regexp: 'ENTER_HERE_GIT_USER'
    replace: "{{gituser}}"
  become: yes

- name: Set GitHub Password in Groovy script
  vars:
    gitpass: "{{ env_vars.GIT_PASSWORD }}"
  replace:
    path: /var/lib/jenkins/init.groovy.d/envSet.groovy
    regexp: 'ENTER_HERE_GIT_PASSWORD'
    replace: "{{gitpass}}"
  become: yes

- name: Set Mongo Port in Groovy script
  vars:
    mongoport: "{{ env_vars.MONGODB_PORT }}"
  replace:
    path: /var/lib/jenkins/init.groovy.d/envSet.groovy
    regexp: 'ENTER_HERE_MONGO_PORT'
    replace: "{{mongoport}}"
  become: yes

- name: Set Mongo IP in Groovy script
  vars:
    mongoip: "{{ env_vars.MONGODB_IP }}"
  replace:
    path: /var/lib/jenkins/init.groovy.d/envSet.groovy
    regexp: 'ENTER_HERE_MONGO_IP'
    replace: "{{mongoip}}"
  become: yes

- name: Set Mongo User in Groovy script
  vars:
    mongouser: "{{ env_vars.MONGODB_USER }}"
  replace:
    path: /var/lib/jenkins/init.groovy.d/envSet.groovy
    regexp: 'ENTER_HERE_MONGO_USER'
    replace: "{{mongouser}}"
  become: yes

- name: Set Mongo Password in Groovy script
  vars:
    mongopass: "{{ env_vars.MONGODB_PASS }}"
  replace:
    path: /var/lib/jenkins/init.groovy.d/envSet.groovy
    regexp: 'ENTER_HERE_MONGO_PASSWORD'
    replace: "{{mongopass}}"
  become: yes

- name: Set Mail User in Groovy script
  vars:
    mailuser: "{{ env_vars.MONGODB_MAIL_USER }}"
  replace:
    path: /var/lib/jenkins/init.groovy.d/envSet.groovy
    regexp: 'ENTER_HERE_MAIL_USER'
    replace: "{{mailuser}}"
  become: yes

- name: Set Mail Password in Groovy script
  vars:
    mailpass: "{{ env_vars.MONGODB_MAIL_PASSWORD }}"
  replace:
    path: /var/lib/jenkins/init.groovy.d/envSet.groovy
    regexp: 'ENTER_HERE_MAIL_PASSWORD'
    replace: "{{mailpass}}"
  become: yes

- name: Set Mail SMTP in Groovy script
  vars:
    mailsmtp: "{{ env_vars.MONGODB_MAIL_SMTP }}"
  replace:
    path: /var/lib/jenkins/init.groovy.d/envSet.groovy
    regexp: 'ENTER_HERE_MAIL_SMTP'
    replace: "{{mailsmtp}}"
  become: yes


- file:
    path: /var/lib/jenkins/project_repo/jenkins_files/itrust.yml
    mode: "u=rw,g=rw,o=rw"
  become: yes

- file:
    path: /var/lib/jenkins/init.groovy.d/makeCred.groovy
    mode: "u=rw,g=rw,o=rw"
  become: yes

- import_tasks: restart_jenkins.yml

- name: Install plugins for Jenkins
  jenkins_plugin:
    name: "{{item}}"
    with_dependencies: yes
  with_items:
    - git
    - postbuild-task
    # - postbuildscript
    - envinject
    - ansible
  tags:
    installer

- import_tasks: restart_jenkins.yml

- name: Copy jenkins_files directory
  become: yes
  copy:
    src: ./jenkins_files
    dest: "{{ ansible_env.HOME }}"
  tags:
    set_env_checkbox

- name: Upload Itrust Job to Jenkins
  command: 'jenkins-jobs update itrust.yml'
  args:
    chdir: /var/lib/jenkins/project_repo/jenkins_files
  tags:
    upload

- name: Upload Checkbox Job to Jenkins
  command: 'jenkins-jobs update checkbox.yml'
  args:
    chdir: /var/lib/jenkins/project_repo/jenkins_files
  tags:
    set_env_checkbox

- name: Trigger build for Checkbox
  become: yes
  command: "java -jar /var/cache/jenkins/war/WEB-INF/jenkins-cli.jar -s http://localhost:8080/ build 'checkbox-build'"
  tags:
    - build-jobs
    - build_checkbox

- name: Trigger build for iTrust
  become: yes
  command: "java -jar /var/cache/jenkins/war/WEB-INF/jenkins-cli.jar -s http://localhost:8080/ build 'itrust-build'"
  tags:
    build-jobs
