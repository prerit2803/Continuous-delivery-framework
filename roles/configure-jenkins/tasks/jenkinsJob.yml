---
- hosts: localhost
  
  vars:
    gitUser: "{{ lookup('env','gitUser') }}"
    gitPassword: "{{ lookup('env','gitPassword') }}"
  


  become: yes

  tasks:



  # - name: Changes in the config file - make use security false
  #   lineinfile:
  #            dest: /var/lib/jenkins/config.xml
  #            regexp: '^  <useSecurity>'
  #            line: '  <useSecurity>false</useSecurity>'
  # - name: Changes in the config file - delete auth security
  #   lineinfile:
  #            dest: /var/lib/jenkins/config.xml
  #            regexp: '^  <authorizationStrategy'
  #            state: absent
  # - name: Changes in the config file - delete read restriction
  #   lineinfile:
  #            dest: /var/lib/jenkins/config.xml
  #            regexp: '^    <denyAnonymousReadAccess>'
  #            state: absent

  # - name: Changes in the config file - delete read restriction
  #   lineinfile:
  #            dest: /var/lib/jenkins/config.xml
  #            regexp: '^    <denyAnonymousReadAccess>'
  #            state: absent
  # - name: Changes in the config file - delete auth strategy
  #   lineinfile:
  #            dest: /var/lib/jenkins/config.xml
  #            regexp: '^  </authorizationStrategy>'
  #            state: absent
  # - name: Changes in the config file - delete security realm
  #   lineinfile:
  #            dest: /var/lib/jenkins/config.xml
  #            regexp: '^  <securityRealm'
  #            state: absent
  # - name: Changes in the config file - disable signup to jenkins
  #   lineinfile:
  #            dest: /var/lib/jenkins/config.xml
  #            regexp: '^    <disableSignup>'
  #            state: absent
  # - name: Changes in the config file - delete captcha requirement
  #   lineinfile:
  #            dest: /var/lib/jenkins/config.xml
  #            regexp: '^    <enableCaptcha>'
  #            state: absent
  # - name: Changes in the config file - delete security realm
  #   lineinfile:
  #            dest: /var/lib/jenkins/config.xml
  #            regexp: '^  </securityRealm>'
  #            state: absent


  - name: Set groovy 1
    replace: 
      path: /var/lib/jenkins/init.groovy.d/makeCred.groovy
      regexp: 'githubpwd'  
      replace: '"{{gitPassword}}"'    
    become: yes 


 
  - file:
      path: /files/jobs/job.yml
      mode: "u=rw,g=rw,o=rw"

  - file:
      path: /var/lib/jenkins/init.groovy.d/makeCred.groovy
      mode: "u=rw,g=rw,o=rw"    
   


  - name: Restart jenkins
    service:
          name: jenkins
          state: restarted
          
  - name: Jenkins still alive
    uri: url="http://192.168.33.11:8080" status_code=200
    register: result
    until: result.status == 200
    retries: 20
    delay: 1 

  - name: Install Plugins
    jenkins_plugin: 
      name: "{{item}}"
    with_items: 
      #- git
      - post-build-task
      - credentials-plugin
      - credentials-binding-plugin
      - plain-credentials-plugin   

  - name: Install Jenkins Job Builder
    pip:
      name: jenkins-job-builder
      state: present
    become: yes  
  
  - name: Install Jenkins post build task plugin
    become: yes
    shell: cd /var/lib/jenkins && wget http://192.168.33.11:8080/jnlpJars/jenkins-cli.jar



  - name: Upload Jobs to Jenkins
    shell: 'jenkins-jobs update job.yml'
    args:
      chdir: /files/jobs

  - name: Build Job
    shell: java -jar jenkins-cli.jar -s http://192.168.33.11:8080 build itrustJob35
    args:
      chdir: /var/lib/jenkins


  