- name: Create fuzzer branch in iTrust repo
  command: git checkout -b fuzzer
  become: yes
  args:
    chdir: "{{ ansible_env.HOME }}/Milestone2/iTrust2-v2"
  ignore_errors: True
  

#- name: Run mvn install for fuzzer
#  shell: mvn clean install
#  become: yes
#  args:
#    chdir: "{{ ansible_env.HOME }}/Milestone2/iTrust-fuzzer"


- name: Run mvn compile for fuzzer
  shell: mvn compile
  become: yes
  args:
    chdir: "{{ ansible_env.HOME }}/Milestone2/iTrust-fuzzer"
  tags:
    - "compile_fuzzer"


- name: Run fuzzer, commit, revert 100 times
  shell: >
    git config --global user.email "temp@temp.com";
    git config --global user.name "temp";

    COUNTER=0
    RUNS=100

    while [ "$COUNTER" -lt "$RUNS" ]; do
      cd {{ ansible_env.HOME }}/Milestone2/iTrust-fuzzer;
      mvn exec:java -Dexec.mainClass="com.cowboydevop.fuzzer.Fuzzer";

      cd {{ ansible_env.HOME }}/Milestone2/iTrust2-v2/iTrust2;
      # mvn compile;
      if [ "$?" -eq "0" ]
      then
        echo "Compiles. Committing!"
        git diff;
        git add *;
        git commit -m 'temp commit';
        # May need to push to remote repo too
        java -jar /var/cache/jenkins/war/WEB-INF/jenkins-cli.jar -s http://localhost:8080/ build 'itrust-fuzzer'
        git reset --hard HEAD^;
        COUNTER=`expr $COUNTER + 1`

      else
        echo "Does not compile. Removing Changes."
        git reset --hard HEAD;
      fi
    done
  async: 1000
  poll: 0
  become: yes
  args:
    chdir: "{{ ansible_env.HOME }}/Milestone2"
  tags:
    - "shell"

